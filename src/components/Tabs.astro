---
export interface Props {
  activeTextColor?: string;
  headings: string[];
  contents: string[];
}

const {
  headings,
  contents,
  activeTextColor = "#A741FF",
} = Astro.props as Props;
---

<div class="tabs">
  <ul class="tabs-header">
    {headings.map((heading) => <li>{heading}</li>)}
  </ul>
  <div>
    <h3 class="tabs-desc-header">Description</h3>
    <ul class="tabs-content">
      {
        contents.map((content) => (
            <li>{content}</li>
        ))
      }
    </ul>
  </div>
</div>

<style>
  .tabs {
    margin-top: 30px;
    display: flex;
    justify-content: space-between;
  }

  .tabs-header {
    background: #333;
    color: #fff;
    padding: 10px 20px;
    width: 100%;
  }

  .tabs-header li {
    margin-right: 20px;
    cursor: pointer;
  }

  .tabs-desc-header {
    padding: 20px;
  }

  .tabs-content {
    font-size: 18px;
    padding: 20px;
    background: #f4f4f4;
  }
</style>

<script define:vars={{ activeTextColor }}>
function createTabs(element) {
  const header = element.querySelector(".tabs-header");
  const content = element.querySelector(".tabs-content");
  const tab_headers = [...header.children];
  const tab_contents = [...content.children];
  tab_contents.forEach((x) => (x.style.display = "none"));
  let current_tab_index = -1;

  function setTab(index) {
    if (current_tab_index > -1) {
      tab_headers[current_tab_index].style.fontWeight = 400;
      tab_headers[current_tab_index].style.color = "#fff";
      tab_contents[current_tab_index].style.display = "none";
    }
    tab_headers[index].style.fontWeight = 800;
    tab_headers[index].style.color = activeTextColor;
    tab_contents[index].style.display = "flex";
    current_tab_index = index;
  }

  let default_tab_index = tab_headers.findIndex((x) => {
    return [...x.classList].indexOf("default-tab") > -1;
  });

  default_tab_index = default_tab_index === -1 ? 0 : default_tab_index;
  setTab(default_tab_index);
  tab_headers.forEach((x, i) => (x.onclick = (event) => setTab(i)));
}

// Run
[...document.querySelectorAll(".tabs")].forEach((x) => createTabs(x));
</script>
